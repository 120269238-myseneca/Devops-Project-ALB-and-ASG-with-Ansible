---
- hosts: localhost
  gather_facts: no
  tasks:
       
    - name: Check if the key exists
      stat:
        path: ./team-staging
      register: team_staging_stat
    
    - name: Copy key to Ansible directory
      copy:
        src: ../Terraform_Final/main/team-staging
        dest: ./team-staging
        remote_src: no
      when: not team_staging_stat.stat.exists
    
    - name: Set correct permissions on the key
      file:
        path: ./team-staging
        mode: "0600"
      when: not team_staging_stat.stat.exists

    - name: Check if the kangaroo.jpg exists in the S3 bucket
      aws_s3:
        bucket: "sudeep-finalproject-acs730"
        object: "/kangaroo.jpg"
        mode: geturl
      register: s3_kangaroo
      ignore_errors: yes

    - name: Upload kangaroo.jpg to S3 bucket if not exists
      aws_s3:
        bucket: "sudeep-finalproject-acs730"
        object: "/kangaroo.jpg"
        src: "path/to/your/local/kangaroo.jpg"
        mode: put
      when: not s3_kangaroo.url
   
- name: Run the Website on Staging Environment
  hosts: tag__Env_staging
  become: yes
  gather_facts: no

  vars:
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand='ssh -W %h:%p -q -i ./team-staging ec2-user@{{ bastion_host_ip }}'"
    ansible_ssh_private_key_file: ./team-staging
    ansible_ssh_user: ec2-user
    bastion_host_ip: "{{ groups['tag__Name_team_staging_bastion'][0] }}"

  tasks:
    - name: Update all packages
      yum:
        name: '*'
        state: latest

    - name: Install httpd
      yum:
        name: httpd
        state: present

    - name: Create HTML content using template
      template:
        src: ./template.html.j2
        dest: /var/www/html/index.html

    - name: Start and enable httpd
      systemd:
        name: httpd
        state: started
        enabled: yes

